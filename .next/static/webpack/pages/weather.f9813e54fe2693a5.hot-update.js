"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/weather",{

/***/ "./pages/openai.js":
/*!*************************!*\
  !*** ./pages/openai.js ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nconst OpenAI = __webpack_require__(/*! openai */ \"./node_modules/openai/index.js\"); // Use require instead of import\nconst dotenv = __webpack_require__(/*! dotenv */ \"./node_modules/dotenv/lib/main.js\"); // Import dotenv module\ndotenv.config({\n    path: \"../.env\"\n}); // Configure dotenv\n// Import the cors middleware for cross-origin resource sharing - this allows the openai.js API to be accessed from any domain\nconst cors = __webpack_require__(/*! cors */ \"./node_modules/cors/lib/index.js\");\nconst myAPIKey = \"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\";\nconsole.log(myAPIKey);\n// Initialize OpenAI instance with the API key\nconst openai = new OpenAI({\n    apiKey: myAPIKey,\n    dangerouslyAllowBrowser: true\n}); // Pass API key as argument\n// Function to send data to OpenAI API\nconst sendDataToOpenAI = async (data)=>{\n    try {\n        const completion = await openai.chat.completions.create({\n            messages: [\n                {\n                    \"role\": \"user\",\n                    \"content\": data.prompt\n                }\n            ],\n            model: data.model\n        });\n        return completion.choices[0]; // Return the first choice from the completion\n    } catch (error) {\n        console.error(\"Error sending data to OpenAI API:\", error);\n        throw error;\n    }\n};\nmodule.exports.sendDataToOpenAI = sendDataToOpenAI; // Export the function\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9vcGVuYWkuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDLDhDQUFRLEdBQUcsZ0NBQWdDO0FBQ2xFLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLG9EQUFXLHVCQUF1QjtBQUN6REMsT0FBT0MsTUFBTSxDQUFDO0lBQUNDLE1BQUs7QUFBUyxJQUFJLG1CQUFtQjtBQUVwRCw4SEFBOEg7QUFDOUgsTUFBTUMsT0FBT0osbUJBQU9BLENBQUM7QUFFckIsTUFBTUssV0FBV0MscURBQXNDO0FBQ3ZERyxRQUFRQyxHQUFHLENBQUNMO0FBRVosOENBQThDO0FBQzlDLE1BQU1NLFNBQVMsSUFBSVosT0FBTztJQUFDYSxRQUFRUDtJQUFVUSx5QkFBeUI7QUFBSSxJQUFJLDJCQUEyQjtBQUV6RyxzQ0FBc0M7QUFDdEMsTUFBTUMsbUJBQW1CLE9BQU9DO0lBQzlCLElBQUk7UUFDRixNQUFNQyxhQUFhLE1BQU1MLE9BQU9NLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7WUFDdERDLFVBQVU7Z0JBQ1I7b0JBQUUsUUFBUTtvQkFBUSxXQUFXTCxLQUFLTSxNQUFNO2dCQUFDO2FBRTFDO1lBQ0RDLE9BQU9QLEtBQUtPLEtBQUs7UUFDbkI7UUFFQSxPQUFPTixXQUFXTyxPQUFPLENBQUMsRUFBRSxFQUFFLDhDQUE4QztJQUM5RSxFQUFFLE9BQU9DLE9BQU87UUFDZGYsUUFBUWUsS0FBSyxDQUFDLHFDQUFxQ0E7UUFDbkQsTUFBTUE7SUFDUjtBQUNGO0FBRUFDLCtCQUErQixHQUFHWCxrQkFBa0Isc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL29wZW5haS5qcz9hNzAxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE9wZW5BSSA9IHJlcXVpcmUoXCJvcGVuYWlcIik7IC8vIFVzZSByZXF1aXJlIGluc3RlYWQgb2YgaW1wb3J0XHJcbmNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpOyAvLyBJbXBvcnQgZG90ZW52IG1vZHVsZVxyXG5kb3RlbnYuY29uZmlnKHtwYXRoOicuLi8uZW52J30pOyAvLyBDb25maWd1cmUgZG90ZW52XHJcblxyXG4vLyBJbXBvcnQgdGhlIGNvcnMgbWlkZGxld2FyZSBmb3IgY3Jvc3Mtb3JpZ2luIHJlc291cmNlIHNoYXJpbmcgLSB0aGlzIGFsbG93cyB0aGUgb3BlbmFpLmpzIEFQSSB0byBiZSBhY2Nlc3NlZCBmcm9tIGFueSBkb21haW5cclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTsgXHJcblxyXG5jb25zdCBteUFQSUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX09QRU5BSV9BUElfS0VZO1xyXG5jb25zb2xlLmxvZyhteUFQSUtleSk7XHJcblxyXG4vLyBJbml0aWFsaXplIE9wZW5BSSBpbnN0YW5jZSB3aXRoIHRoZSBBUEkga2V5XHJcbmNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUkoe2FwaUtleTogbXlBUElLZXksIGRhbmdlcm91c2x5QWxsb3dCcm93c2VyOiB0cnVlfSk7IC8vIFBhc3MgQVBJIGtleSBhcyBhcmd1bWVudFxyXG5cclxuLy8gRnVuY3Rpb24gdG8gc2VuZCBkYXRhIHRvIE9wZW5BSSBBUElcclxuY29uc3Qgc2VuZERhdGFUb09wZW5BSSA9IGFzeW5jIChkYXRhKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGNvbXBsZXRpb24gPSBhd2FpdCBvcGVuYWkuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xyXG4gICAgICBtZXNzYWdlczogW1xyXG4gICAgICAgIHsgXCJyb2xlXCI6IFwidXNlclwiLCBcImNvbnRlbnRcIjogZGF0YS5wcm9tcHQgfSwgLy8gQXNzdW1pbmcgcHJvbXB0IGlzIHRoZSB1c2VyJ3MgbWVzc2FnZVxyXG4gICAgICAgIC8vIEFkZCBvdGhlciBtZXNzYWdlcyBpZiBuZWVkZWRcclxuICAgICAgXSxcclxuICAgICAgbW9kZWw6IGRhdGEubW9kZWwsXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gY29tcGxldGlvbi5jaG9pY2VzWzBdOyAvLyBSZXR1cm4gdGhlIGZpcnN0IGNob2ljZSBmcm9tIHRoZSBjb21wbGV0aW9uXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlbmRpbmcgZGF0YSB0byBPcGVuQUkgQVBJOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzLnNlbmREYXRhVG9PcGVuQUkgPSBzZW5kRGF0YVRvT3BlbkFJOyAvLyBFeHBvcnQgdGhlIGZ1bmN0aW9uXHJcbiJdLCJuYW1lcyI6WyJPcGVuQUkiLCJyZXF1aXJlIiwiZG90ZW52IiwiY29uZmlnIiwicGF0aCIsImNvcnMiLCJteUFQSUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19PUEVOQUlfQVBJX0tFWSIsImNvbnNvbGUiLCJsb2ciLCJvcGVuYWkiLCJhcGlLZXkiLCJkYW5nZXJvdXNseUFsbG93QnJvd3NlciIsInNlbmREYXRhVG9PcGVuQUkiLCJkYXRhIiwiY29tcGxldGlvbiIsImNoYXQiLCJjb21wbGV0aW9ucyIsImNyZWF0ZSIsIm1lc3NhZ2VzIiwicHJvbXB0IiwibW9kZWwiLCJjaG9pY2VzIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/openai.js\n"));

/***/ })

});